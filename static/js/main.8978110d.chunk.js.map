{"version":3,"sources":["hook/useWindDim.js","comp/History.js","comp/HistList.js","comp/Display.js","comp/Pad.js","comp/CalcPad.js","comp/Calc.js","comp/Core.js","App.js","index.js"],"names":["useWindDim","getWindDim","window","w","innerWidth","h","innerHeight","handleResize","setWindDim","useState","windDim","useEffect","addEventListener","removeEventListener","History","props","jsx","truncator","str","includes","toTrun","split","slice","length","join","str1","hist","str2","className","genHist","onClick","handleHist","ind","handleExp","HistList","upAr","downAr","mobSty","transition","height","power","boxShadow","bigSty","Math","min","e","handlePow","id","map","histI","renderHist","style","undefined","cursor","Display","dispStr","disp","res","op1","oper","op2","fontSize","Pad","dispTxt","act","setAct","desc","keyCode","document","handleKey","parseInt","handleAct","shiftKey","handleEvent","preventDefault","a","Promise","resolve","setTimeout","CalcPad","url","buttons","setButtons","fetch","response","json","data","buttList","fetchData","catch","console","log","button","class","renderButton","Calc","position","top","max","marginLeft","config","precision","math","create","all","Core","setOp1","setOper","setOp2","dec","setDec","setRes","ey","setEy","setHist","width","display","left","histing","l","r","o","u","d","Date","getMilliseconds","toString","getDate","getMinutes","getUnique","concat","calcing","opL","bignumber","opR","ans","add","subtract","multiply","divide","mod","handleNum","num","test","handleArith","op","handleSign","oOld","rekt","handleEnt","handleEy","newOp2","indexOf","handleOther","rem","sqrt","pow","toCalc","handleClear","saveOp","saveOp1","handleDel","margin","i","toSet","App","setPower","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8978110d.chunk.js","sourcesContent":["// external\r\n// react\r\nimport {useState, useEffect} from 'react';\r\n\r\n//hook for tracking viewport size\r\nconst useWindDim=()=>{\r\n    const getWindDim=()=>{\r\n      const {innerWidth:w,innerHeight:h}=window;\r\n      return {w,h};\r\n    }\r\n    const handleResize=()=>{\r\n      setWindDim(getWindDim());\r\n    }\r\n    //initialize to viewport size on open\r\n    const [windDim,setWindDim]=useState(getWindDim());\r\n  \r\n    //add listener for resize on mount/remove on unmount\r\n    useEffect(()=>{\r\n      window.addEventListener('resize',handleResize);\r\n      return ()=>window.removeEventListener('resize',handleResize);\r\n    });\r\n  \r\n    return windDim;\r\n  }\r\n  \r\n  export default useWindDim;","// external\r\n// react\r\nimport React from 'react';\r\n\r\n//interactive history item\r\nconst History = props => {\r\n\r\n    //time travel by passing back own index when clicked, turn power on\r\n    const handleClick=()=>{\r\n      props.handleHist(props.ind);\r\n      props.handleExp(true);\r\n    }\r\n    \r\n    //generate displayed history text\r\n    const genHist=()=>{\r\n      //truncate sig. dig. when e+ exists to 15 in total length of string\r\n      //truncate sign. dig. when it is decimal number to 15 \r\n      const truncator=str=>{\r\n        if (str.includes('e')) {\r\n          const toTrun = str.split('e');\r\n          toTrun[0]=toTrun[0].slice(0,15-toTrun[1].length-3)+'(...)';\r\n          return toTrun.join('e');\r\n        }\r\n        else if (str.includes('.')) {\r\n          const toTrun=str.split('.');\r\n          toTrun[1]=toTrun[1].slice(0,15-toTrun[0].length-3)+'(...)';\r\n          return toTrun.join('.');\r\n        }\r\n        return str;\r\n  \r\n      }\r\n      //assemble result string\r\n      let str1=props.hist[0].length>15?truncator(props.hist[0]):props.hist[0];\r\n      str1+= ` ${props.hist[1]} `;\r\n      str1+= props.hist[2].length>15?truncator(props.hist[2]):props.hist[2];\r\n      let str2= '= ';\r\n      str2+=props.hist[3].length>15?truncator(props.hist[3]):props.hist[3];\r\n  \r\n      return <div><p className=\"hisOp\">{str1}</p><p className=\"hisRes\">{str2}</p></div>;\r\n    }\r\n    const jsx=genHist();\r\n    return (\r\n      <div onClick={handleClick}\r\n        className='histItem'>\r\n        {jsx}\r\n      </div>\r\n    )\r\n  } \r\n  export default History;","// external\r\n// react\r\nimport React from 'react';\r\n// internal\r\n// components\r\nimport History from './History';\r\n//list of history\r\nconst HistList = props => {\r\n    //up when expanded (power off)\r\n    //down when collapsed (power on)\r\n    const upAr=<i className=\"fas fa-arrow-up\" />;\r\n    const downAr=<i className=\"fas fa-arrow-down\" />;\r\n  \r\n    //collapsible history on top of viewport in mobile view\r\n    const mobSty={\r\n      transition:'height 200ms ease-in',\r\n      height:props.power?'40px':'540px',\r\n      boxShadow:props.power?'none':'0px 0px 10px #CCC'\r\n    };\r\n  \r\n    //full size history on left of calculator in desktop view\r\n    const bigSty={\r\n      height:`${Math.min(540,props.h)}px`\r\n    }\r\n  \r\n    const handleExp=e=>{\r\n      props.handlePow(e);\r\n    }\r\n    //renders from array to history component\r\n    const renderHist = (histI,ind) => <History\r\n      ind = {ind}\r\n      key = {histI[4]}\r\n      hist = {histI}\r\n      handleHist = {props.handleHist}\r\n      handleExp= {handleExp}\r\n      />\r\n  \r\n    //map array of arrays to list of history components\r\n    const jsx = [<div id=\"histHeader\" key=\"-1\">Past Calculations</div>,...props.hist.map((histI,ind)=>renderHist(histI,ind))];\r\n    return (\r\n      <div id=\"histList\" style={props.w>900?{...bigSty}:{...mobSty}}>\r\n        {jsx}\r\n        <div id=\"roller\" \r\n        onClick={props.w<=900?props.handlePow:undefined}\r\n        style={{cursor:props.w>900?'default':'pointer'}}\r\n        >{props.w<=900?props.power?downAr:upAr:''}</div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default HistList;\r\n  ","// external\r\n// react\r\nimport React from 'react';\r\n\r\n//display\r\n//contains a 'fixed string' with small font on top left\r\n//contains a 'variable string' open to change on bottom right\r\n//variable string font size doubles under 15 chars in length\r\nconst Display = props => {\r\n    let dispStr = '';\r\n    let disp = '';\r\n    if (props.res === '') {\r\n      dispStr = props.op1 + ' ' + props.oper;\r\n      disp = props.op2;\r\n    }\r\n    else {\r\n      dispStr = props.op1 + ' ' + props.oper + ' ' + props.op2 + '=';\r\n      disp = props.res;\r\n    }\r\n  \r\n    return (\r\n      <div id=\"scr\">\r\n        <div id='operation'>\r\n          <p>{dispStr}</p>\r\n        </div>\r\n        <div id=\"display\" \r\n             style={{fontSize:disp.length>=15?'1rem':'2rem'}}>\r\n          <p>{disp}</p>\r\n        </div>\r\n      </div>\r\n  \r\n    )\r\n  }\r\n\r\n  export default Display;\r\n  ","// external\r\n// react\r\nimport React, {useState, useEffect} from 'react';\r\n\r\n//the buttons\r\nconst Pad = props => {\r\n\r\n    //if activated (100ms glow)\r\n    const [act,setAct]=useState(false);\r\n  \r\n    //button display text\r\n    let dispTxt;\r\n    if (props.desc === \"pow\")\r\n      dispTxt = <p>x<sup>2</sup></p>;\r\n    else if (props.desc === \"sqrt\")\r\n      dispTxt = <p>&radic;</p>;\r\n    else if (props.desc === \"sign\")\r\n      dispTxt = <p>+/-</p>;\r\n    else if (props.desc === \"bksp\")\r\n      dispTxt = <i className=\"fas fa-backspace\"></i>;\r\n    else if (props.desc===\"e\")\r\n      dispTxt=<p>EE</p>;\r\n    else\r\n      dispTxt = <p>{props.desc}</p>;\r\n  \r\n    //add keydown event listener on mount/remove on unmount (only if keycode exists in json)\r\n    useEffect(() => {\r\n      if (props.keyCode === \"\") return;\r\n      document.addEventListener('keydown', handleKey);\r\n      return () => { document.removeEventListener('keydown', handleKey) };\r\n    });\r\n  \r\n    //when keydown\r\n    const handleKey = e => {\r\n      //check if this is pressed\r\n      if (e.keyCode === parseInt(props.keyCode)) {\r\n        //animation\r\n        handleAct();\r\n        //make sure % works but not 5 for modulo operator\r\n        if (e.keyCode===53) {\r\n          if (e.shiftKey)\r\n            props.handleEvent(props.desc);\r\n        }\r\n        //prevent default behaviors (/ opening quick search on firefox etc) then pass descriptor to be processed\r\n        else {\r\n          e.preventDefault();\r\n          props.handleEvent(props.desc);\r\n        }\r\n      }\r\n    }\r\n  \r\n    //when clicked\r\n    const handleClick = () => {\r\n      //animation\r\n      handleAct();\r\n      //pass descriptor to be processed\r\n      props.handleEvent(props.desc);\r\n    }\r\n  \r\n    //100 ms glow animation effect on activation\r\n    const handleAct = async()=>{\r\n      setAct(true);\r\n      await new Promise((resolve)=>setTimeout(resolve,100));\r\n      setAct(false);\r\n    }\r\n    return (\r\n      <div className={`${props.className} ${act?'clicked':''}`}\r\n        id={props.id}\r\n        onClick={handleClick}>\r\n        {dispTxt}\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default Pad;","// external\r\n// react\r\nimport React, {useState, useEffect} from 'react';\r\n// internal\r\n// component\r\nimport Pad from './Pad';\r\n//calculator buttons\r\nconst CalcPad = props => {\r\n    const [url] = useState('https://raw.githubusercontent.com/MatchaCrisp/JSCalculator/main/public/button.json');\r\n    const [buttons, setButtons] = useState([]);\r\n  \r\n    //convert from object to pad component\r\n    const renderButton = button => <Pad\r\n      className={button.class}\r\n      id={button.id}\r\n      keyCode={button.keyCode}\r\n      key={button.id}\r\n      desc={button.desc}\r\n      handleEvent={props.handleEvent} />\r\n  \r\n    //fetch json with list of buttons and attributes\r\n    useEffect(() => {\r\n      if (!url) return;\r\n  \r\n      const fetchData = async () => {\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        setButtons(data.buttList);\r\n      }\r\n      fetchData().catch(console.log);\r\n    }, [url]);\r\n  \r\n    //map from array of obj to pad component\r\n    const jsx = buttons.map(button => renderButton(button));\r\n    return (\r\n      <div id=\"calcPad\">\r\n        {jsx}\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default CalcPad;","// external\r\n// react\r\nimport React from 'react';\r\n// internal\r\n// components\r\nimport Display from './Display';\r\nimport CalcPad from './CalcPad';\r\n\r\n//contains a display and calculator buttons\r\nconst Calc = props => {\r\n    //desktop, right side of history\r\n    const bigSty={\r\n      position:'relative',\r\n      marginLeft:'100px'\r\n    }\r\n    //mobile, center of page below history\r\n    const mobSty={\r\n      position:'absolute',\r\n      top:`${Math.max((props.h-540)/2+40,40)}px`\r\n    }\r\n  \r\n    return (\r\n      <div id=\"calc\"\r\n            style={props.w>900?{...bigSty}:{...mobSty}}>\r\n        <Display op1={props.op1}\r\n          oper={props.oper}\r\n          op2={props.op2}\r\n          res={props.res}\r\n          hist={props.hist} />\r\n        <CalcPad handleEvent={props.handleEvent} />\r\n      </div>\r\n    )\r\n  }\r\n  export default Calc;\r\n\r\n  ","// external\r\n// react\r\nimport React, {useState} from 'react';\r\n// mathjs\r\nimport { create, all } from 'mathjs';\r\n\r\n// internal\r\n// components\r\nimport HistList from './HistList';\r\nimport Calc from './Calc';\r\n\r\n// mathjs config\r\n//digit limit\r\nconst digLim=22;\r\n//significant digits\r\nconst config = {\r\n  precision: digLim\r\n};\r\nconst math = create(all, config);\r\n\r\n//calculation core\r\n//contains history & calc\r\nconst Core = props => {\r\n    //left operand\r\n    const [op1, setOp1] = useState('');\r\n    //operator\r\n    const [oper, setOper] = useState('');\r\n    //right operand\r\n    const [op2, setOp2] = useState('0');\r\n    //if decimal \r\n    const [dec, setDec] = useState(false);\r\n    //calculation result\r\n    const [res, setRes] = useState('');\r\n    //sci notation\r\n    const [ey, setEy] = useState(false);\r\n    //array of past history\r\n    const [hist, setHist] = useState([]);\r\n  \r\n    //responsive (mobile)\r\n    const mobSty={\r\n      width:'400px',\r\n      height:'100%',\r\n      margin:'0 auto'\r\n    }\r\n  \r\n    //responsive (desktop)\r\n    const bigSty={\r\n      width:'900px',\r\n      height:'500px',\r\n      display:'flex',\r\n      top:`${Math.max((props.h-500)/2,0)}px`,\r\n      left:`${Math.max((props.w-900)/2,0)}px`\r\n    }\r\n  \r\n    //generate unique key based on time of action\r\n    const getUnique=()=>{\r\n      const d = new Date();\r\n      return d.getMilliseconds().toString(16)+d.getDate().toString(16)+d.getMinutes().toString(16);\r\n    }\r\n    //record calculation to history when given all 4 parameters (max history size 13)\r\n    const histing=(l,r,o,a)=>{\r\n      const u=getUnique();\r\n      if (hist.length>=13)\r\n        setHist(hist.concat([[l,r,o,a,u]]).slice(1));\r\n      else\r\n      setHist(hist.concat([[l,r,o,a,u]]));\r\n    }\r\n    //calculate result given operands and operator\r\n    const calcing = (l,r,o) => {\r\n      if (l==='infinity' || r==='infinity')\r\n        return 'infinity';\r\n  \r\n      //convert string to bignumber \r\n        const opL = math.bignumber(l);\r\n        const opR = math.bignumber(r);\r\n        let ans='';\r\n        if (o === '+') {\r\n          ans = (math.add(opL, opR).toString());\r\n        }\r\n        else if (o === '-') {\r\n          ans = (math.subtract(opL, opR).toString());\r\n        }\r\n        else if (o === '*') {\r\n          ans = (math.multiply(opL, opR).toString());\r\n        }\r\n        else if (o === '/') {\r\n          //custom msg of dividing by zero\r\n          if (r === '0')\r\n            ans = ('undefined');\r\n          else\r\n            ans = (math.divide(opL, opR).toString());\r\n        }\r\n        else if (o ==='%') {\r\n          ans = (math.mod(opL,opR).toString());\r\n        }\r\n  \r\n        //if answer is too big (15 sig. dig. plus 'e+' plus decimal point leaves 10 digits for after e+)\r\n        if (ans.length>28) \r\n          return 'infinity';\r\n        return ans;\r\n    }\r\n  \r\n    //distribute passed action to appropraite handler\r\n    const handleEvent = e => {\r\n      if (!props.power)\r\n        return;\r\n      if (e.length === 1) {\r\n        if (e === '=') {\r\n          handleEnt();\r\n        }\r\n        else if (e === 'e') {\r\n          handleEy();\r\n        }\r\n        else if (/[\\d.]/.test(e)) {\r\n          handleNum(e);\r\n        }\r\n        else {\r\n          handleArith(e);\r\n        }\r\n      }\r\n      else if (e.length === 2) {\r\n        handleClear(e);\r\n      }\r\n      else if (e === 'bksp') {\r\n        handleDel();\r\n      }\r\n      else if (e === 'sign') {\r\n        handleSign();\r\n      }\r\n      else\r\n        handleOther(e);\r\n    }\r\n  \r\n  \r\n    //0-9 & decimal\r\n    const handleNum = num => {\r\n  \r\n  \r\n      //case of complete calculation, or undefined/infinity as part of operand\r\n      //clear all, then process given input\r\n      if (res !== '' || op2==='undefined' || op2==='infinity') {\r\n        setOp1('');\r\n        setOper('');\r\n        setRes('');\r\n        setEy(false);\r\n        if (num === '.') {\r\n          setOp2('0.');\r\n          setDec(true);\r\n        }\r\n        else {\r\n          setOp2(num);\r\n          setDec(false);\r\n        }\r\n      }\r\n      //max digit: 15\r\n      else if (op2.length - (dec ? 1 : 0) - (ey ? 2:0) < digLim) {\r\n        //dealing with leading zero\r\n        if (num === '0') {\r\n          //case of no number & case of decimal point present\r\n          if (op2.length === 0 || dec)\r\n            setOp2(op2.concat(num));\r\n          //case of no already leading zero\r\n          else if (op2[0] !== '0')\r\n            setOp2(op2.concat(num));\r\n        }\r\n        //dealing with decimal\r\n        else if (num === '.') {\r\n          //case of no number\r\n          if (op2.length === 0) {\r\n            setDec(true);\r\n            setOp2(op2.concat('0.'));\r\n  \r\n          }\r\n          //case of no decimal and no scientific notation\r\n          else if (!dec && !ey) {\r\n            setDec(true);\r\n            setOp2(op2.concat('.'));\r\n  \r\n          }\r\n        }\r\n        //dealing with 1-9\r\n        else if (/[1-9]/.test(num)) {\r\n          //case of only zero, no decimals\r\n          if (op2.length > 0 && !dec && op2[0] === '0')\r\n            setOp2(num);\r\n          //all other cases\r\n          else\r\n            setOp2(op2.concat(num));\r\n        }\r\n  \r\n  \r\n      }\r\n  \r\n    }\r\n  \r\n    //+ - * / %\r\n    const handleArith = op => {\r\n      //case operand undefined/infinity or result undefined/infinity\r\n      //clear all\r\n      if (res==='undefined' || res==='infinity' || op2==='undefined' || op2==='infinity') {\r\n        setOp1('');\r\n        setOper('');\r\n        setOp2('0');\r\n        setRes('');\r\n        setDec(false);\r\n        setEy(false);\r\n      }\r\n      //case of complete calculation\r\n      //half fill calculation with prev result as left operand, and given input as operator\r\n      else if (res !== '') {\r\n        const rem = res;\r\n        setOp1(rem);\r\n        setOper(op);\r\n        setOp2('');\r\n        setRes('');\r\n        setDec(false);\r\n        setEy(false);\r\n      }\r\n      //no operators\r\n      else if (oper === '') {\r\n        //case of existing operand (not just a negative sign)\r\n        if (op2.length > 0 && op2[op2.length-1]!=='-') {\r\n          //either no scientific notation, or a complete sci not (number must exist after e+)\r\n          if (!ey || op2[op2.length - 1] !== '+') {\r\n            const toMove = op2;\r\n            setOp1(toMove);\r\n            setOper(op);\r\n            setOp2('');\r\n            setRes('');\r\n            setDec(false);\r\n            setEy(false);\r\n          }\r\n  \r\n        }\r\n      }\r\n      //operator already exists\r\n      else {\r\n        //case of no existing op2, or op2 is just a negative sign\r\n        if (op2.length === 0||op2[op2.length-1]==='-') {\r\n          //case of - operator, swap pos/neg\r\n          if (op==='-') {\r\n            handleSign();\r\n          }\r\n          //case of other operators (clear possible lone negative sign)\r\n          else {\r\n            setOper(op);\r\n            setOp2('');\r\n          }\r\n  \r\n        }\r\n        //case of two operands\r\n        else {\r\n          //either no scientific notation, or a complete sci not (number must exist after e+) and its not just a - sign\r\n          if ((!ey || op2[op2.length - 1] !== '+') && op2[op2.length - 1] !== '-') {\r\n  \r\n            const oOld=oper;\r\n            const l=op1;\r\n            const r=op2;\r\n            const rekt = calcing(l,r,oOld);\r\n  \r\n            setOp1(rekt);\r\n            setOper(op);\r\n            setOp2('');\r\n            setRes('');\r\n            setDec(false);\r\n            setEy(false);\r\n            histing(l,oOld,r,rekt);\r\n          }\r\n  \r\n        }\r\n      }\r\n  \r\n    }\r\n  \r\n    // enter (equals)\r\n    const handleEnt = () => {\r\n      //only works with existing op1, op2, and a operator, with no completed calculation in place\r\n      if (res === '' && op1.length > 0 && oper !== '' && op2.length > 0) {\r\n        //additional requirements of:\r\n        //either no scientific notation, or a complete sci not (number must exist after e+) \r\n        //not just a - sign as entire operand\r\n        if ((!ey || op2[op2.length - 1] !== '+') && op2[op2.length - 1] !== '-') {\r\n          const rekt=calcing(op1,op2,oper);\r\n          setRes(rekt);\r\n          histing(op1,oper,op2,rekt);\r\n        }\r\n      }\r\n    }\r\n  \r\n    //handle +/- (test condition to see if behaves in expected way)\r\n    const handleSign = () => {\r\n      //case of complete calculation or operand is undefined/infinity\r\n      if (res !== '' || op2==='undefined' || op2==='infinity') {\r\n        setOp1('');\r\n        setOper('');\r\n        setOp2('-');\r\n        setRes('');\r\n        setDec(false);\r\n        setEy(false);\r\n      }\r\n      //case of existing op2\r\n      else if (op2.length > 0) {\r\n        //case of positive to negative\r\n        if (op2[0] !== '-')\r\n          setOp2('-'.concat(op2));\r\n        //case of negative to positive\r\n        else\r\n          setOp2(op2.slice(1));\r\n      }\r\n      //case of empty right operand\r\n      else\r\n        setOp2('-');\r\n    }\r\n  \r\n    //handle sci notation (test removal feature)\r\n    const handleEy = () => {\r\n      //only works with existing op2 that is not undefined/infinity\r\n      //only works with incomplete calculation\r\n      if (res==='' && op2.length > 0 && op2!=='undefined' && op2!=='infinity') {\r\n        //remove sci note. if already exists\r\n        if (ey) {\r\n          const newOp2=op2.slice(0,op2.indexOf('e'));\r\n          setOp2(newOp2);\r\n          setEy(false);\r\n        }\r\n        //not only 0 as operand, not trailing decimal place, sci notation doesn't already exist\r\n        else if (op2[0] !== '0' || (dec && op2.length > 2) || !ey) {\r\n          setOp2(op2.concat('e+'));\r\n          setEy(true);\r\n        }\r\n      }\r\n    }\r\n    //sqrt, squared\r\n    const handleOther = op => {\r\n      //case of complete calculation and res not infinity/undefined\r\n      if (res!=='' && res!=='undefined' && res!=='infinity') {\r\n        let rem=math.bignumber(res);\r\n        if (op === 'sqrt') {\r\n          rem=math.sqrt(rem).toString();\r\n        }\r\n        else {\r\n          rem=math.pow(rem,2).toString();\r\n        }\r\n        //perform operation based on input, then clear all and set op2\r\n        setOp1('');\r\n        setOper('');\r\n        setOp2(rem);\r\n        setRes('');\r\n        setDec(rem.includes('.'));\r\n        setEy(rem.includes('e'));\r\n      }\r\n      //only works with existing op2 and incomplete calculations\r\n      else if (op2.length > 0 && (op2!=='undefined'&&op2!=='infinity')) {\r\n        const toCalc = math.bignumber(op2);\r\n        if (op === 'sqrt') {\r\n          const ans = math.sqrt(toCalc).toString();\r\n          setOp2(ans.length>28?'infinity':ans);\r\n          //set sci notation if exists\r\n          setEy(ans.includes('e'));\r\n        }\r\n        else {\r\n          const ans = math.pow(toCalc, 2).toString();\r\n          setOp2(ans.length>28?'infinity':ans);\r\n          //set sci notation if exists\r\n          setEy(ans.includes('e'));\r\n        }\r\n      }\r\n  \r\n    }\r\n  \r\n    //clears\r\n    const handleClear = e => {\r\n      //all clear\r\n      if (e === 'ac') {\r\n        setOp1('');\r\n        setOper('');\r\n        setOp2('0');\r\n        setRes('');\r\n        setDec(false);\r\n        setEy(false);\r\n      }\r\n      //clear entry\r\n      else {\r\n        //case of calculation completed, or both operands exist\r\n        //remove both result and right operand\r\n        if (op1.length > 0 && op2.length > 0) {\r\n          const saveOp1 = op1;\r\n          const saveOp = oper;\r\n          setOp1(saveOp1);\r\n          setOper(saveOp);\r\n          setOp2('');\r\n          setRes('');\r\n          setDec(false);\r\n          setEy(false);\r\n        }\r\n        //case of 1 operand plus operator\r\n        //remove operator, move left operand to right operand\r\n        else if (op1.length > 0 && oper) {\r\n          const saveOp1 = op1;\r\n          setOp1('');\r\n          setOper('');\r\n          setOp2(saveOp1);\r\n          setRes('');\r\n          setEy((/e\\+/i).test(saveOp1));\r\n          setDec((/\\./).test(saveOp1));\r\n        }\r\n        //case of only 1 operand\r\n        //clear existing right operand\r\n        else {\r\n          setOp2('');\r\n        }\r\n      }\r\n    }\r\n  \r\n    //time travel given index\r\n    const handleHist = i => {\r\n      const toSet=hist[i];\r\n      setOp1(toSet[0]);\r\n      setOper(toSet[1]);\r\n      setOp2(toSet[2]);\r\n      setRes(toSet[3]);\r\n    }\r\n  \r\n    //handle backspaces\r\n    const handleDel = () => {\r\n      //no complete calculation only\r\n      if (res === '') {\r\n        //case existing right operand\r\n        if (op2.length > 0) {\r\n          //case of on the scientific notation \r\n          if (op2[op2.length - 1] === '+') {\r\n            setOp2(op2.slice(0, op2.length - 2));\r\n            setEy(false);\r\n          }\r\n          //case of on the decimal\r\n          else if (op2[op2.length - 1] === '.') {\r\n            setOp2(op2.slice(0, op2.length - 1));\r\n            setDec(false);\r\n          }\r\n          //case of 0-9 or -\r\n          else {\r\n            setOp2(op2.slice(0, op2.length - 1));\r\n          }\r\n        }\r\n        //case left operand and operator\r\n        //remove operator and move left operand to right operand\r\n        else if (op1.length > 0 && oper) {\r\n          const saveOp1 = op1;\r\n          setOp1('');\r\n          setOper('');\r\n          setOp2(saveOp1);\r\n          setRes('');\r\n          setEy((/e\\+/i).test(saveOp1));\r\n          setDec((/\\./).test(saveOp1));\r\n        }\r\n      }\r\n    }\r\n  \r\n    return (\r\n      <div id=\"core\"\r\n        style={props.w>900?{...bigSty}:{...mobSty}}>\r\n        <HistList hist={hist} \r\n          h={props.h}\r\n          w={props.w}\r\n          handleHist={handleHist}\r\n          handlePow={props.handlePow}\r\n          power={props.power}/>\r\n        <Calc \r\n          h={props.h}\r\n          w={props.w}\r\n          op1={op1}\r\n          oper={oper}\r\n          op2={op2}\r\n          res={res}\r\n          hist={hist}\r\n          handleEvent={handleEvent} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Core;","// external\r\n// react\r\nimport React, {useState,useEffect} from 'react';\r\n// internal\r\n// hook\r\nimport useWindDim from './hook/useWindDim';\r\n// component\r\nimport Core from './comp/Core';\r\n\r\n//background & on/off\r\n//contains core & gray backdrop when power off\r\nconst App = () => {\r\n    const {h,w}=useWindDim();\r\n    //when off, no input on calculator is registered\r\n    //off only when in mobile and history is expanded\r\n    const [power,setPower]=useState(true);\r\n    //either switch to opposite state, or if given boolean parameter, set to that boolean\r\n    const handlePow=(e)=>{\r\n      if (typeof(e)==='boolean')\r\n        setPower(e);\r\n      else\r\n        setPower(!power);\r\n    } \r\n    useEffect(()=>{\r\n      if (w<=900)\r\n        return;\r\n      setPower(true);\r\n    },[w])\r\n    //gray backdrop that covers screen when power off\r\n    return (\r\n      <div id=\"app\">\r\n        <Core handlePow={handlePow}\r\n              power={power}\r\n              h={h}\r\n              w={w}/>\r\n        <div id=\"drop\" style={{display:power?'none':'block'}} onClick={()=>handlePow(true)}/>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default App;","// external\n// react\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// internal\n// components\nimport App from './App';\n// stylesheets\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}